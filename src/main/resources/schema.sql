DROP TABLE IF EXISTS film_mpa;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS film_likes;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS mpa;

CREATE TABLE IF NOT EXISTS films (
	film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	description VARCHAR(200) NOT NULL,
	releaseDate DATE,
	duration INTEGER
);

CREATE TABLE IF NOT EXISTS users (
	user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email VARCHAR(100) NOT NULL,
	login VARCHAR(50) NOT NULL,
	name VARCHAR(50),
	birthday DATE
);

CREATE TABLE IF NOT EXISTS genres (
	genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER NOT NULL,
    genre_id INTEGER,
    CONSTRAINT film_genre_film_fk FOREIGN KEY (film_id) REFERENCES films (film_id),
    CONSTRAINT film_genre_genre_fk FOREIGN KEY (genre_id) REFERENCES genres (genre_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
	film_id INTEGER NOT NULL,
	user_id INTEGER,
	CONSTRAINT film_likes_film_fk FOREIGN KEY (film_id) REFERENCES films (film_id),
	CONSTRAINT film_likes_user_fk FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS friends (
	user_id INTEGER,
	friend_id INTEGER,
	CONSTRAINT friends_user_fk FOREIGN KEY (user_id) REFERENCES users (user_id),
	CONSTRAINT friends_friend_fk FOREIGN KEY (friend_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_mpa (
    film_id INTEGER NOT NULL,
    mpa_id INTEGER,
    CONSTRAINT film_mpa_film_fk FOREIGN KEY (film_id) REFERENCES films (film_id),
    CONSTRAINT film_mpa_mpa_fk FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id)
);